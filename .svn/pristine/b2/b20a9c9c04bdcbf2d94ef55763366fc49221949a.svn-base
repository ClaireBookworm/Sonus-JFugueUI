package Projekt.Frame;


import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.*;


final class InstrumentPanel extends JPanel
{
    //BUTTONS
    private JButton guitar, saxophone, drums, bass, piano, misc, swag, horse;
    //CONSTANTS
    private static final int BUTTON_SIZE_X = 20;
    private static final int BUTTON_SIZE_Y = 70;
    //COLOR
    private final Color buttonBackground = Color.WHITE;
    //MAINFRAME
    private final MainFrame mainFrame;



    //Constructor
    public InstrumentPanel(MainFrame main){
        mainFrame = main;
        gridMaker();
    }


    // Makes the grid, buttons and actions for iPanel
    void gridMaker()
    {

        this.setLayout(new GridBagLayout());
        GridBagConstraints c = new GridBagConstraints();

        //ImageIcon guitarIcon = new ImageIcon("/Users/Erik/Sound/src/Projekt/Frame/Guitar-icon.ico");
        guitar = new JButton();
        try {
            Image img = ImageIO.read(getClass().getResource("guitar.bmp"));
            guitar.setIcon(new ImageIcon(img));
        } catch (IOException ex) {
        }
        guitar.setBackground(buttonBackground);
        c.fill = GridBagConstraints.BOTH;
        c.ipady = 55;//BUTTON_SIZE_Y;
        c.ipadx = 55;//BUTTON_SIZE_X;
        c.gridx = 0;
        c.gridy = 0;
        this.add(guitar, c);

        guitar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e){
               new InstrumentPopup("Guitar", mainFrame);
            }
        });

        saxophone = new JButton();
        try {
            Image img = ImageIO.read(getClass().getResource("guitar.bmp"));
            saxophone.setIcon(new ImageIcon(img));
        } catch (IOException ex) {
        }
        saxophone.setBackground(buttonBackground);
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 1;
        c.gridy = 0;
        this.add(saxophone, c);

        saxophone.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new InstrumentPopup("Sax", mainFrame);
            }
        });

        drums = new JButton();
        try {
            Image img = ImageIO.read(getClass().getResource("guitar.bmp"));
            drums.setIcon(new ImageIcon(img));
        } catch (IOException ex) {
        }
        drums.setBackground(buttonBackground);
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 0;
        c.gridy = 1;
        this.add(drums, c);

        drums.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new InstrumentPopup("Drums", mainFrame);
            }
        });

        bass = new JButton();
        try {
            Image img = ImageIO.read(getClass().getResource("guitar.bmp"));
            bass.setIcon(new ImageIcon(img));
        } catch (IOException ex) {
        }
        bass.setBackground(buttonBackground);
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 1;
        c.gridy = 1;
        this.add(bass, c);

        bass.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new InstrumentPopup("Bass", mainFrame);
            }
        });



        piano = new JButton();
        try {
            Image img = ImageIO.read(getClass().getResource("guitar.bmp"));
            piano.setIcon(new ImageIcon(img));
        } catch (IOException ex) {
        }
        piano.setBackground(buttonBackground);
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 0;
        c.gridy = 2;
        this.add(piano, c);

        piano.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new InstrumentPopup("Piano", mainFrame);
            }
        });



        misc = new JButton();
        try {
            Image img = ImageIO.read(getClass().getResource("guitar.bmp"));
            misc.setIcon(new ImageIcon(img));
        } catch (IOException ex) {
        }
        misc.setBackground(buttonBackground);
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 1;
        c.gridy = 2;
        this.add(misc, c);

        misc.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new InstrumentPopup("Misc", mainFrame);
            }
        });



        swag = new JButton();
        try {
            Image img = ImageIO.read(getClass().getResource("guitar.bmp"));
            swag.setIcon(new ImageIcon(img));
        } catch (IOException ex) {
        }
        swag.setBackground(buttonBackground);
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 0;
        c.gridy = 3;
        this.add(swag, c);

        swag.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new InstrumentPopup("Swag", mainFrame);
            }
        });



        horse = new JButton();
        try {
            Image img = ImageIO.read(getClass().getResource("guitar.bmp"));
            horse.setIcon(new ImageIcon(img));
        } catch (IOException ex) {
        }
        horse.setBackground(buttonBackground);
        c.fill = GridBagConstraints.BOTH;
        c.gridx = 1;
        c.gridy = 3;
        this.add(horse, c);

        horse.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new InstrumentPopup("Horse", mainFrame);
            }
        });

    }

}
